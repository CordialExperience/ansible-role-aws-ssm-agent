---
- name: Set custom facts
  set_fact:
    proxy_url: "http://{{ proxy_host }}:{{ proxy_port }}"
    ssm_proxy: "http_proxy={{ proxy_host }}:{{ proxy_port }}"
  when: proxy_host and proxy_port

- name: Set proxy environment variable
  debug:
    msg: "Proxy url: {{ proxy_url }}"
  environment:
    http_proxy: '{{ proxy_url }}'
    https_proxy: '{{ proxy_url }}'
  when: proxy_url

- name: Assures {{ working_directory }} exists
  tags: install
  win_file: path={{ working_directory }} state=directory

- name: Push package to server
  tags: install
  win_get_url:
    url: '{{ download_path }}'
    dest: '{{ installer_path }}'
    force: '{{ force_upgrade }}'
  when: not proxy_url

- name: Push package to server via proxy
  tags: install
  win_get_url:
    url: '{{ download_path }}'
    dest: '{{ installer_path }}'
    proxy_url: '{{ proxy_url }}'
    force: '{{ force_upgrade }}'
  when: proxy_url

- name: Install Package
  tags: install
  win_package:
    path: '{{ installer_path }}'
    arguments: '{{ arguments | default(omit) }}'
    creates_service: '{{ aws_ssm_agent_service_name }}'
    creates_path: '{{ aws_ssm_agent_path }}'
    register: status
  when: ansible_distribution_major_version is version('6', '<=')

- name: Check SSM proxy settings
  tags: configure
  win_reg_stat:
    path: 'HKLM:\SYSTEM\CurrentControlSet\Services\AmazonSSMAgent'
    name: Environment
  register: ssm_proxy_status

- name: Get Proxy Details
  debug: var=ssm_proxy_status.raw_value
  when: ssm_proxy_status.exists

- name: Configure SSM Proxy
  tags: configure
  script: configure_ssm_proxy.ps1  -proxy_host '{{ proxy_host }}' -proxy_port '{{ proxy_port }}' -no_proxy '{{ no_proxy }}'
  when: proxy_host and proxy_port and ( ssm_proxy not in ssm_proxy_status.raw_value )

- name: Remove SSM Proxy
  win_regedit:
    path: 'HKLM:\SYSTEM\CurrentControlSet\Services\AmazonSSMAgent'
    name: Environment
    state: absent
  when: ssm_proxy_status.exists and not proxy_host and not proxy_port
  tags:
    - remove
    - proxy

- name: Check AWS Cloudwatch Config
  win_stat:
    path: '{{ aws_ssm_cloudwatch_config_path }}\AWS.EC2.Windows.CloudWatch.json'
    get_checksum: no
  register: aws_clw_config

- name: Remove AWS Cloudwatch Config 
  win_file:
    path: '{{ aws_ssm_cloudwatch_config_path }}\AWS.EC2.Windows.CloudWatch.json'
    state: absent
  when: aws_clw_config.stat.exists and not ( cloudwatch_monitoring | bool )

- name: Copy Config File
  template:
    src: "{{ item }}"
    dest: '{{ aws_ssm_cloudwatch_config_path }}\AWS.EC2.Windows.CloudWatch.json'
  with_first_found:
    - files:
        - "{{ aws_ssm_config_template_path }}"
  when: ansible_distribution_major_version is version('6', '>=') and ( cloudwatch_monitoring | bool )
  register: ssm_config
  notify:
    - restart windows ssmagent

